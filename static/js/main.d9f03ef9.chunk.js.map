{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","form","label","input","type","onChange","placeholder","pattern","title","required","btn","Component","Filter","ContactList","contacts","onDeleteContact","list","map","id","item","info","onClick","App","shortid","generate","filter","addContact","contact","find","toLowerCase","alert","trim","test","deleteContact","contactId","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9f03ef9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__276A0\",\"input\":\"Filter_input__ZhRr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__20sWY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__38-d5\",\"label\":\"ContactForm_label__3Tfkh\",\"input\":\"ContactForm_input__1oeyU\",\"btn\":\"ContactForm_btn__dCo2N\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n                    placeholder=\"Ivan Ivanov\"\r\n                     pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n  required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n                    placeholder=\"111-11-11\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n  required\r\n          />\r\n        </label>\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <p className={s.info}>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={s.btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)} >\r\n            Delete\r\n           </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport Container from './components/Container/Container';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n     { id: shortid.generate(), name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: shortid.generate(), name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: shortid.generate(), name: 'Eden Clements', number: '645-17-79' },\r\n      { id: shortid.generate(), name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const contact = {\r\n       id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const { contacts } = this.state;\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`${name} is already in contacts.`);\r\n    } else if (contacts.find(contact => contact.number === number)) {\r\n      alert(`${number} is already in contacts.`);\r\n    } else if (name.trim() === '' || number.trim() === '') {\r\n      alert(\"Enter the contact's name and number phone!\");\r\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\r\n      alert('Enter the correct number phone!');\r\n    } else {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [contact, ...contacts],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        {contacts.length > 1 && (\r\n          <Filter value={filter} onChange={this.changeFilter} />\r\n        )}\r\n        {contacts.length > 0 ? (\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        ) : (\r\n          <p>Your phonebook is empty. Please add contact.</p>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3XBPj\",\"item\":\"ContactList_item__2iJw_\",\"btn\":\"ContactList_btn__2zOgU\"};"],"sourceRoot":""}